@page "/"
@layout NoNavLayout
@inject AlbertBankApp.Interfaces.IAccountService AccountService
@inject NavigationManager Navigation

<h3>Välkommen till AlbertBankApp!</h3>
<br/>
<div class="form-group" id="codeInputContainer" style="max-width: 200px;">
    <label for="inputCode" class="form-label">Ange kod för att logga in:</label>
    <InputText id="inputCode"
               class="form-control"
               @bind-Value="userCode"
               type="password"
               inputmode="numeric"
               pattern="[0-9]*"
               @oninput="OnlyDigits" />
</div>

@if (!string.IsNullOrEmpty(userCode) && IsDigitsOnly(userCode))
{
    <button class="btn btn-primary mt-2" @onclick="HandleLogin">Logga in</button>
}

@if (!string.IsNullOrEmpty(message))
{
    <div class="text-danger mt-2">@message</div>
}

@code {
    private string userCode = string.Empty;
    private string message = string.Empty;

    private void OnlyDigits(ChangeEventArgs e)
    {
        var value = e.Value?.ToString() ?? string.Empty;
        var sb = new System.Text.StringBuilder(value.Length);
        foreach (var ch in value)
        {
            if (char.IsDigit(ch)) sb.Append(ch);
        }

        userCode = sb.ToString();
    }

    private bool IsDigitsOnly(string str)
    {
        if (string.IsNullOrEmpty(str)) return false;
        foreach (var ch in str)
        {
            if (!char.IsDigit(ch)) return false;
        }

        return true;
    }

    private async Task HandleLogin()
    {
        message = string.Empty;
        var ok = await AccountService.ValidatePinAsync(userCode);
        if (ok)
        {
            Navigation.NavigateTo("/home", forceLoad: false, replace: true);
        }
        else
        {
            message = "Fel kod. Försök igen.";
            userCode = string.Empty;
        }
    }

}